{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Flights Data Exploration Challenge\n",
    "\n",
    "In this challenge, you'll explore a real-world dataset containing flights data from the US Department of Transportation.\n",
    "\n",
    "Let's start by loading and viewing the data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>DayofMonth</th>\n",
       "      <th>DayOfWeek</th>\n",
       "      <th>Carrier</th>\n",
       "      <th>OriginAirportID</th>\n",
       "      <th>OriginAirportName</th>\n",
       "      <th>OriginCity</th>\n",
       "      <th>OriginState</th>\n",
       "      <th>DestAirportID</th>\n",
       "      <th>DestAirportName</th>\n",
       "      <th>DestCity</th>\n",
       "      <th>DestState</th>\n",
       "      <th>CRSDepTime</th>\n",
       "      <th>DepDelay</th>\n",
       "      <th>DepDel15</th>\n",
       "      <th>CRSArrTime</th>\n",
       "      <th>ArrDelay</th>\n",
       "      <th>ArrDel15</th>\n",
       "      <th>Cancelled</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2013</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>DL</td>\n",
       "      <td>15304</td>\n",
       "      <td>Tampa International</td>\n",
       "      <td>Tampa</td>\n",
       "      <td>FL</td>\n",
       "      <td>12478</td>\n",
       "      <td>John F. Kennedy International</td>\n",
       "      <td>New York</td>\n",
       "      <td>NY</td>\n",
       "      <td>1539</td>\n",
       "      <td>4</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1824</td>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2013</td>\n",
       "      <td>9</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>WN</td>\n",
       "      <td>14122</td>\n",
       "      <td>Pittsburgh International</td>\n",
       "      <td>Pittsburgh</td>\n",
       "      <td>PA</td>\n",
       "      <td>13232</td>\n",
       "      <td>Chicago Midway International</td>\n",
       "      <td>Chicago</td>\n",
       "      <td>IL</td>\n",
       "      <td>710</td>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>740</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2013</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>6</td>\n",
       "      <td>AS</td>\n",
       "      <td>14747</td>\n",
       "      <td>Seattle/Tacoma International</td>\n",
       "      <td>Seattle</td>\n",
       "      <td>WA</td>\n",
       "      <td>11278</td>\n",
       "      <td>Ronald Reagan Washington National</td>\n",
       "      <td>Washington</td>\n",
       "      <td>DC</td>\n",
       "      <td>810</td>\n",
       "      <td>-3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1614</td>\n",
       "      <td>-7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2013</td>\n",
       "      <td>7</td>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>OO</td>\n",
       "      <td>13930</td>\n",
       "      <td>Chicago O'Hare International</td>\n",
       "      <td>Chicago</td>\n",
       "      <td>IL</td>\n",
       "      <td>11042</td>\n",
       "      <td>Cleveland-Hopkins International</td>\n",
       "      <td>Cleveland</td>\n",
       "      <td>OH</td>\n",
       "      <td>804</td>\n",
       "      <td>35</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1027</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2013</td>\n",
       "      <td>5</td>\n",
       "      <td>16</td>\n",
       "      <td>4</td>\n",
       "      <td>DL</td>\n",
       "      <td>13931</td>\n",
       "      <td>Norfolk International</td>\n",
       "      <td>Norfolk</td>\n",
       "      <td>VA</td>\n",
       "      <td>10397</td>\n",
       "      <td>Hartsfield-Jackson Atlanta International</td>\n",
       "      <td>Atlanta</td>\n",
       "      <td>GA</td>\n",
       "      <td>545</td>\n",
       "      <td>-1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>728</td>\n",
       "      <td>-9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year  Month  DayofMonth  DayOfWeek Carrier  OriginAirportID  \\\n",
       "0  2013      9          16          1      DL            15304   \n",
       "1  2013      9          23          1      WN            14122   \n",
       "2  2013      9           7          6      AS            14747   \n",
       "3  2013      7          22          1      OO            13930   \n",
       "4  2013      5          16          4      DL            13931   \n",
       "\n",
       "              OriginAirportName  OriginCity OriginState  DestAirportID  \\\n",
       "0           Tampa International       Tampa          FL          12478   \n",
       "1      Pittsburgh International  Pittsburgh          PA          13232   \n",
       "2  Seattle/Tacoma International     Seattle          WA          11278   \n",
       "3  Chicago O'Hare International     Chicago          IL          11042   \n",
       "4         Norfolk International     Norfolk          VA          10397   \n",
       "\n",
       "                            DestAirportName    DestCity DestState  CRSDepTime  \\\n",
       "0             John F. Kennedy International    New York        NY        1539   \n",
       "1              Chicago Midway International     Chicago        IL         710   \n",
       "2         Ronald Reagan Washington National  Washington        DC         810   \n",
       "3           Cleveland-Hopkins International   Cleveland        OH         804   \n",
       "4  Hartsfield-Jackson Atlanta International     Atlanta        GA         545   \n",
       "\n",
       "   DepDelay  DepDel15  CRSArrTime  ArrDelay  ArrDel15  Cancelled  \n",
       "0         4       0.0        1824        13         0          0  \n",
       "1         3       0.0         740        22         1          0  \n",
       "2        -3       0.0        1614        -7         0          0  \n",
       "3        35       1.0        1027        33         1          0  \n",
       "4        -1       0.0         728        -9         0          0  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df_flights = pd.read_csv('data/flights.csv')\n",
    "df_flights.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The dataset contains observations of US domestic flights in 2013, and consists of the following fields:\n",
    "\n",
    "- **Year**: The year of the flight (all records are from 2013)\n",
    "- **Month**: The month of the flight\n",
    "- **DayofMonth**: The day of the month on which the flight departed\n",
    "- **DayOfWeek**: The day of the week on which the flight departed - from 1 (Monday) to 7 (Sunday)\n",
    "- **Carrier**: The two-letter abbreviation for the airline.\n",
    "- **OriginAirportID**: A unique numeric identifier for the departure aiport\n",
    "- **OriginAirportName**: The full name of the departure airport\n",
    "- **OriginCity**: The departure airport city\n",
    "- **OriginState**: The departure airport state\n",
    "- **DestAirportID**: A unique numeric identifier for the destination aiport\n",
    "- **DestAirportName**: The full name of the destination airport\n",
    "- **DestCity**: The destination airport city\n",
    "- **DestState**: The destination airport state\n",
    "- **CRSDepTime**: The scheduled departure time\n",
    "- **DepDelay**: The number of minutes departure was delayed (flight that left ahead of schedule have a negative value)\n",
    "- **DelDelay15**: A binary indicator that departure was delayed by more than 15 minutes (and therefore considered \"late\")\n",
    "- **CRSArrTime**: The scheduled arrival time\n",
    "- **ArrDelay**: The number of minutes arrival was delayed (flight that arrived ahead of schedule have a negative value)\n",
    "- **ArrDelay15**: A binary indicator that arrival was delayed by more than 15 minutes (and therefore considered \"late\")\n",
    "- **Cancelled**: A binary indicator that the flight was cancelled\n",
    "\n",
    "Your challenge is to explore the flight data to analyze possible factors that affect delays in departure or arrival of a flight.\n",
    "\n",
    "1. Start by cleaning the data.\n",
    "    - Identify any null or missing data, and impute appropriate replacement values.\n",
    "    - Identify and eliminate any outliers in the **DepDelay** and **ArrDelay** columns.\n",
    "2. Explore the cleaned data.\n",
    "    - View summary statistics for the numeric fields in the dataset.\n",
    "    - Determine the distribution of the **DepDelay** and **ArrDelay** columns.\n",
    "    - Use statistics, aggregate functions, and visualizations to answer the following questions:\n",
    "        - *What are the average (mean) departure and arrival delays?*\n",
    "        - *How do the carriers compare in terms of arrival delay performance?*\n",
    "        - *Is there a noticable difference in arrival delays for different days of the week?*\n",
    "        - *Which departure airport has the highest average departure delay?*\n",
    "        - *Do **late** departures tend to result in longer arrival delays than on-time departures?*\n",
    "        - *Which route (from origin airport to destination airport) has the most **late** arrivals?*\n",
    "        - *Which route has the highest average arrival delay?*\n",
    "        \n",
    "Add markdown and code cells as required to create your solution.\n",
    "\n",
    "> **Note**: There is no single \"correct\" solution. A sample solution is provided in [01 - Flights Challenge.ipynb](01%20-%20Flights%20Solution.ipynb)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>DayofMonth</th>\n",
       "      <th>DayOfWeek</th>\n",
       "      <th>OriginAirportID</th>\n",
       "      <th>DestAirportID</th>\n",
       "      <th>CRSDepTime</th>\n",
       "      <th>DepDelay</th>\n",
       "      <th>DepDel15</th>\n",
       "      <th>CRSArrTime</th>\n",
       "      <th>ArrDelay</th>\n",
       "      <th>ArrDel15</th>\n",
       "      <th>Cancelled</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>271940.0</td>\n",
       "      <td>271940.000000</td>\n",
       "      <td>271940.000000</td>\n",
       "      <td>271940.000000</td>\n",
       "      <td>271940.000000</td>\n",
       "      <td>271940.000000</td>\n",
       "      <td>271940.000000</td>\n",
       "      <td>271940.000000</td>\n",
       "      <td>269179.000000</td>\n",
       "      <td>271940.000000</td>\n",
       "      <td>271940.000000</td>\n",
       "      <td>271940.000000</td>\n",
       "      <td>271940.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>6.978514</td>\n",
       "      <td>15.814775</td>\n",
       "      <td>3.899316</td>\n",
       "      <td>12744.899584</td>\n",
       "      <td>12739.136493</td>\n",
       "      <td>1325.498713</td>\n",
       "      <td>10.350449</td>\n",
       "      <td>0.201134</td>\n",
       "      <td>1505.477819</td>\n",
       "      <td>6.496650</td>\n",
       "      <td>0.215930</td>\n",
       "      <td>0.010723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.982431</td>\n",
       "      <td>8.799033</td>\n",
       "      <td>1.987219</td>\n",
       "      <td>1501.199773</td>\n",
       "      <td>1502.569949</td>\n",
       "      <td>470.748546</td>\n",
       "      <td>35.673710</td>\n",
       "      <td>0.400849</td>\n",
       "      <td>493.204020</td>\n",
       "      <td>38.230331</td>\n",
       "      <td>0.411467</td>\n",
       "      <td>0.102995</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>10140.000000</td>\n",
       "      <td>10140.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-63.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-75.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>11292.000000</td>\n",
       "      <td>11292.000000</td>\n",
       "      <td>920.000000</td>\n",
       "      <td>-4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1119.000000</td>\n",
       "      <td>-11.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>12892.000000</td>\n",
       "      <td>12892.000000</td>\n",
       "      <td>1320.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1529.000000</td>\n",
       "      <td>-3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>14057.000000</td>\n",
       "      <td>14057.000000</td>\n",
       "      <td>1725.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1918.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2013.0</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>31.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>15376.000000</td>\n",
       "      <td>15376.000000</td>\n",
       "      <td>2359.000000</td>\n",
       "      <td>1425.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2359.000000</td>\n",
       "      <td>1440.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Year          Month     DayofMonth      DayOfWeek  OriginAirportID  \\\n",
       "count  271940.0  271940.000000  271940.000000  271940.000000    271940.000000   \n",
       "mean     2013.0       6.978514      15.814775       3.899316     12744.899584   \n",
       "std         0.0       1.982431       8.799033       1.987219      1501.199773   \n",
       "min      2013.0       4.000000       1.000000       1.000000     10140.000000   \n",
       "25%      2013.0       5.000000       8.000000       2.000000     11292.000000   \n",
       "50%      2013.0       7.000000      16.000000       4.000000     12892.000000   \n",
       "75%      2013.0       9.000000      23.000000       6.000000     14057.000000   \n",
       "max      2013.0      10.000000      31.000000       7.000000     15376.000000   \n",
       "\n",
       "       DestAirportID     CRSDepTime       DepDelay       DepDel15  \\\n",
       "count  271940.000000  271940.000000  271940.000000  269179.000000   \n",
       "mean    12739.136493    1325.498713      10.350449       0.201134   \n",
       "std      1502.569949     470.748546      35.673710       0.400849   \n",
       "min     10140.000000       1.000000     -63.000000       0.000000   \n",
       "25%     11292.000000     920.000000      -4.000000       0.000000   \n",
       "50%     12892.000000    1320.000000      -1.000000       0.000000   \n",
       "75%     14057.000000    1725.000000       9.000000       0.000000   \n",
       "max     15376.000000    2359.000000    1425.000000       1.000000   \n",
       "\n",
       "          CRSArrTime       ArrDelay       ArrDel15      Cancelled  \n",
       "count  271940.000000  271940.000000  271940.000000  271940.000000  \n",
       "mean     1505.477819       6.496650       0.215930       0.010723  \n",
       "std       493.204020      38.230331       0.411467       0.102995  \n",
       "min         1.000000     -75.000000       0.000000       0.000000  \n",
       "25%      1119.000000     -11.000000       0.000000       0.000000  \n",
       "50%      1529.000000      -3.000000       0.000000       0.000000  \n",
       "75%      1918.000000      10.000000       0.000000       0.000000  \n",
       "max      2359.000000    1440.000000       1.000000       1.000000  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Your code to explore the data\n",
    "df_flights.describe()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Year                    0\n",
      "Month                   0\n",
      "DayofMonth              0\n",
      "DayOfWeek               0\n",
      "Carrier                 0\n",
      "OriginAirportID         0\n",
      "OriginAirportName       0\n",
      "OriginCity              0\n",
      "OriginState             0\n",
      "DestAirportID           0\n",
      "DestAirportName         0\n",
      "DestCity                0\n",
      "DestState               0\n",
      "CRSDepTime              0\n",
      "DepDelay                0\n",
      "DepDel15             2761\n",
      "CRSArrTime              0\n",
      "ArrDelay                0\n",
      "ArrDel15                0\n",
      "Cancelled               0\n",
      "dtype: int64\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "      <th>DayofMonth</th>\n",
       "      <th>DayOfWeek</th>\n",
       "      <th>Carrier</th>\n",
       "      <th>OriginAirportID</th>\n",
       "      <th>OriginAirportName</th>\n",
       "      <th>OriginCity</th>\n",
       "      <th>OriginState</th>\n",
       "      <th>DestAirportID</th>\n",
       "      <th>DestAirportName</th>\n",
       "      <th>DestCity</th>\n",
       "      <th>DestState</th>\n",
       "      <th>CRSDepTime</th>\n",
       "      <th>DepDelay</th>\n",
       "      <th>DepDel15</th>\n",
       "      <th>CRSArrTime</th>\n",
       "      <th>ArrDelay</th>\n",
       "      <th>ArrDel15</th>\n",
       "      <th>Cancelled</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>171</th>\n",
       "      <td>2013</td>\n",
       "      <td>4</td>\n",
       "      <td>18</td>\n",
       "      <td>4</td>\n",
       "      <td>DL</td>\n",
       "      <td>10397</td>\n",
       "      <td>Hartsfield-Jackson Atlanta International</td>\n",
       "      <td>Atlanta</td>\n",
       "      <td>GA</td>\n",
       "      <td>13930</td>\n",
       "      <td>Chicago O'Hare International</td>\n",
       "      <td>Chicago</td>\n",
       "      <td>IL</td>\n",
       "      <td>835</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>945</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>359</th>\n",
       "      <td>2013</td>\n",
       "      <td>5</td>\n",
       "      <td>22</td>\n",
       "      <td>3</td>\n",
       "      <td>OO</td>\n",
       "      <td>11433</td>\n",
       "      <td>Detroit Metro Wayne County</td>\n",
       "      <td>Detroit</td>\n",
       "      <td>MI</td>\n",
       "      <td>13930</td>\n",
       "      <td>Chicago O'Hare International</td>\n",
       "      <td>Chicago</td>\n",
       "      <td>IL</td>\n",
       "      <td>1719</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1738</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>429</th>\n",
       "      <td>2013</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>MQ</td>\n",
       "      <td>13851</td>\n",
       "      <td>Will Rogers World</td>\n",
       "      <td>Oklahoma City</td>\n",
       "      <td>OK</td>\n",
       "      <td>13930</td>\n",
       "      <td>Chicago O'Hare International</td>\n",
       "      <td>Chicago</td>\n",
       "      <td>IL</td>\n",
       "      <td>1935</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2125</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>545</th>\n",
       "      <td>2013</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>FL</td>\n",
       "      <td>14524</td>\n",
       "      <td>Richmond International</td>\n",
       "      <td>Richmond</td>\n",
       "      <td>VA</td>\n",
       "      <td>10397</td>\n",
       "      <td>Hartsfield-Jackson Atlanta International</td>\n",
       "      <td>Atlanta</td>\n",
       "      <td>GA</td>\n",
       "      <td>630</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>809</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>554</th>\n",
       "      <td>2013</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>EV</td>\n",
       "      <td>12953</td>\n",
       "      <td>LaGuardia</td>\n",
       "      <td>New York</td>\n",
       "      <td>NY</td>\n",
       "      <td>11193</td>\n",
       "      <td>Cincinnati/Northern Kentucky International</td>\n",
       "      <td>Cincinnati</td>\n",
       "      <td>OH</td>\n",
       "      <td>1320</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1524</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271410</th>\n",
       "      <td>2013</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>WN</td>\n",
       "      <td>14831</td>\n",
       "      <td>Norman Y. Mineta San Jose International</td>\n",
       "      <td>San Jose</td>\n",
       "      <td>CA</td>\n",
       "      <td>10800</td>\n",
       "      <td>Bob Hope</td>\n",
       "      <td>Burbank</td>\n",
       "      <td>CA</td>\n",
       "      <td>1525</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1625</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271607</th>\n",
       "      <td>2013</td>\n",
       "      <td>6</td>\n",
       "      <td>18</td>\n",
       "      <td>2</td>\n",
       "      <td>EV</td>\n",
       "      <td>14100</td>\n",
       "      <td>Philadelphia International</td>\n",
       "      <td>Philadelphia</td>\n",
       "      <td>PA</td>\n",
       "      <td>13244</td>\n",
       "      <td>Memphis International</td>\n",
       "      <td>Memphis</td>\n",
       "      <td>TN</td>\n",
       "      <td>600</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>729</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271634</th>\n",
       "      <td>2013</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>AA</td>\n",
       "      <td>11298</td>\n",
       "      <td>Dallas/Fort Worth International</td>\n",
       "      <td>Dallas/Fort Worth</td>\n",
       "      <td>TX</td>\n",
       "      <td>14100</td>\n",
       "      <td>Philadelphia International</td>\n",
       "      <td>Philadelphia</td>\n",
       "      <td>PA</td>\n",
       "      <td>1325</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1745</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271671</th>\n",
       "      <td>2013</td>\n",
       "      <td>10</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>WN</td>\n",
       "      <td>12892</td>\n",
       "      <td>Los Angeles International</td>\n",
       "      <td>Los Angeles</td>\n",
       "      <td>CA</td>\n",
       "      <td>12889</td>\n",
       "      <td>McCarran International</td>\n",
       "      <td>Las Vegas</td>\n",
       "      <td>NV</td>\n",
       "      <td>1440</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1540</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>271885</th>\n",
       "      <td>2013</td>\n",
       "      <td>5</td>\n",
       "      <td>15</td>\n",
       "      <td>3</td>\n",
       "      <td>US</td>\n",
       "      <td>14771</td>\n",
       "      <td>San Francisco International</td>\n",
       "      <td>San Francisco</td>\n",
       "      <td>CA</td>\n",
       "      <td>14100</td>\n",
       "      <td>Philadelphia International</td>\n",
       "      <td>Philadelphia</td>\n",
       "      <td>PA</td>\n",
       "      <td>1059</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1918</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2761 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Year  Month  DayofMonth  DayOfWeek Carrier  OriginAirportID  \\\n",
       "171     2013      4          18          4      DL            10397   \n",
       "359     2013      5          22          3      OO            11433   \n",
       "429     2013      7           3          3      MQ            13851   \n",
       "545     2013      4          13          6      FL            14524   \n",
       "554     2013      5           8          3      EV            12953   \n",
       "...      ...    ...         ...        ...     ...              ...   \n",
       "271410  2013      8           5          1      WN            14831   \n",
       "271607  2013      6          18          2      EV            14100   \n",
       "271634  2013      5           8          3      AA            11298   \n",
       "271671  2013     10           8          2      WN            12892   \n",
       "271885  2013      5          15          3      US            14771   \n",
       "\n",
       "                               OriginAirportName         OriginCity  \\\n",
       "171     Hartsfield-Jackson Atlanta International            Atlanta   \n",
       "359                   Detroit Metro Wayne County            Detroit   \n",
       "429                            Will Rogers World      Oklahoma City   \n",
       "545                       Richmond International           Richmond   \n",
       "554                                    LaGuardia           New York   \n",
       "...                                          ...                ...   \n",
       "271410   Norman Y. Mineta San Jose International           San Jose   \n",
       "271607                Philadelphia International       Philadelphia   \n",
       "271634           Dallas/Fort Worth International  Dallas/Fort Worth   \n",
       "271671                 Los Angeles International        Los Angeles   \n",
       "271885               San Francisco International      San Francisco   \n",
       "\n",
       "       OriginState  DestAirportID                             DestAirportName  \\\n",
       "171             GA          13930                Chicago O'Hare International   \n",
       "359             MI          13930                Chicago O'Hare International   \n",
       "429             OK          13930                Chicago O'Hare International   \n",
       "545             VA          10397    Hartsfield-Jackson Atlanta International   \n",
       "554             NY          11193  Cincinnati/Northern Kentucky International   \n",
       "...            ...            ...                                         ...   \n",
       "271410          CA          10800                                    Bob Hope   \n",
       "271607          PA          13244                       Memphis International   \n",
       "271634          TX          14100                  Philadelphia International   \n",
       "271671          CA          12889                      McCarran International   \n",
       "271885          CA          14100                  Philadelphia International   \n",
       "\n",
       "            DestCity DestState  CRSDepTime  DepDelay  DepDel15  CRSArrTime  \\\n",
       "171          Chicago        IL         835         0       NaN         945   \n",
       "359          Chicago        IL        1719         0       NaN        1738   \n",
       "429          Chicago        IL        1935         0       NaN        2125   \n",
       "545          Atlanta        GA         630         0       NaN         809   \n",
       "554       Cincinnati        OH        1320         0       NaN        1524   \n",
       "...              ...       ...         ...       ...       ...         ...   \n",
       "271410       Burbank        CA        1525         0       NaN        1625   \n",
       "271607       Memphis        TN         600         0       NaN         729   \n",
       "271634  Philadelphia        PA        1325         0       NaN        1745   \n",
       "271671     Las Vegas        NV        1440         0       NaN        1540   \n",
       "271885  Philadelphia        PA        1059         0       NaN        1918   \n",
       "\n",
       "        ArrDelay  ArrDel15  Cancelled  \n",
       "171            0         1          1  \n",
       "359            0         1          1  \n",
       "429            0         1          1  \n",
       "545            0         1          1  \n",
       "554            0         1          1  \n",
       "...          ...       ...        ...  \n",
       "271410         0         1          1  \n",
       "271607         0         1          1  \n",
       "271634         0         1          1  \n",
       "271671         0         1          1  \n",
       "271885         0         1          1  \n",
       "\n",
       "[2761 rows x 20 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df_flights.isnull().sum())\n",
    "df_flights[df_flights.isnull().any(axis=1)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "delayed = pd.Series(df_flights.DepDelay>=15)\n",
    "\n",
    "df_flights.DepDel15 = df_flights.DepDel15.fillna(delayed)\n",
    "\n",
    "df_flights.DepDel15.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_flights.DepDel15.replace({False: 0.0, True: 1.0},inplace=True)\n",
    "df_flights.DepDel15[271671]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "DepDelay = df_flights.DepDelay\n",
    "ArrDelay = df_flights.ArrDelay"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "\n",
    "from matplotlib import pyplot as plt\n",
    "\n",
    "# Get the variable to examine\n",
    "var = DepDelay\n",
    "\n",
    "# Plot a histogram\n",
    "plt.boxplot(var)\n",
    "\n",
    "# Add titles and labels\n",
    "plt.title('Data Distribution')\n",
    "\n",
    "# Show the figure\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "count    271940.000000\n",
      "mean         10.350449\n",
      "std          35.673710\n",
      "min         -63.000000\n",
      "25%          -4.000000\n",
      "50%          -1.000000\n",
      "75%           9.000000\n",
      "max        1425.000000\n",
      "Name: DepDelay, dtype: float64\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "count    271940.000000\n",
       "mean          6.496650\n",
       "std          38.230331\n",
       "min         -75.000000\n",
       "25%         -11.000000\n",
       "50%          -3.000000\n",
       "75%          10.000000\n",
       "max        1440.000000\n",
       "Name: ArrDelay, dtype: float64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(DepDelay.describe())\n",
    "ArrDelay.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-46.0 -16.0 333.0 333.0\n"
     ]
    }
   ],
   "source": [
    "qArr01 = ArrDelay.quantile(0.001)\n",
    "qDep01 = DepDelay.quantile(0.001)\n",
    "qArr99 = ArrDelay.quantile(0.999)\n",
    "qDep99 = DepDelay.quantile(0.999)\n",
    "print(qArr01,qDep01,qArr99,qDep99)\n",
    "new_df = df_flights[(df_flights.ArrDelay > qArr01) &  (df_flights.ArrDelay < qArr99) & (df_flights.DepDelay > qDep01) & (df_flights.DepDelay < qDep99)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "def show_density(var_data):\n",
    "    from matplotlib import pyplot as plt\n",
    "\n",
    "    fig = plt.figure(figsize=(10,4))\n",
    "\n",
    "    # Plot density\n",
    "    var_data.plot.density()\n",
    "\n",
    "    # Add titles and labels\n",
    "    plt.title('Data Density')\n",
    "\n",
    "    # Show the mean, median, and mode\n",
    "    plt.axvline(x=var_data.mean(), color = 'cyan', linestyle='dashed', linewidth = 2)\n",
    "    plt.axvline(x=var_data.median(), color = 'red', linestyle='dashed', linewidth = 2)\n",
    "    plt.axvline(x=var_data.mode()[0], color = 'yellow', linestyle='dashed', linewidth = 2)\n",
    "\n",
    "    # Show the figure\n",
    "    plt.show()\n",
    "    \n",
    "\n",
    "    \n",
    "plt.boxplot(new_df.ArrDelay)\n",
    "plt.title('New Boxplot for ArrDelay')\n",
    "plt.show()\n",
    "\n",
    "plt.boxplot(df_flights.ArrDelay)\n",
    "plt.show()\n",
    "    \n",
    "show_density(new_df.ArrDelay)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_271496/2268317906.py:6: UserWarning: Matplotlib is currently using module://matplotlib_inline.backend_inline, which is a non-GUI backend, so cannot show the figure.\n",
      "  fig.show()\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x288 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(2,2,figsize=(20,4))\n",
    "ax[0][0].hist(new_df.ArrDelay)\n",
    "ax[0][1].hist(new_df.DepDelay)\n",
    "ax[1][0].boxplot(new_df.ArrDelay,vert=False)\n",
    "ax[1][1].boxplot(new_df.DepDelay,vert=False)\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:ylabel='Density'>"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "new_df.ArrDelay.plot.density()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:ylabel='Density'>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "new_df.DepDelay.plot.density()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "arrivalmean = new_df.ArrDelay.mean()\n",
    "departuremean = new_df.DepDelay.mean()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "What are the average (mean) departure and arrival delays?\n",
      "      Departure:  9.916937918410428  minutes\n",
      "      Arrival:  6.103496379619584  minutes\n",
      "\n",
      "How do the carriers compare in terms of arrival delay performance?\n",
      "\n",
      "Is there a noticable difference in arrival delays for different days of the week?\n",
      "\n",
      "Which departure airport has the highest average departure delay?\n",
      "\n",
      "Do **late** departures tend to result in longer arrival delays than on-time departures?\n",
      "\n",
      "Which route (from origin airport to destination airport) has the most **late** arrivals?\n",
      "\n",
      "Which route has the highest average arrival delay?\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print('What are the average (mean) departure and arrival delays?\\n      Departure: ',departuremean,' minutes\\n      Arrival: ',arrivalmean,' minutes\\n')\n",
    "\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Carrier\n",
       "9E     7959\n",
       "AA    28876\n",
       "AS     6688\n",
       "B6    12307\n",
       "DL    38349\n",
       "EV    15814\n",
       "F9     3522\n",
       "FL     9356\n",
       "HA     1858\n",
       "MQ    11478\n",
       "OO    16130\n",
       "UA    28540\n",
       "US    23530\n",
       "VX     3515\n",
       "WN    57838\n",
       "YV     5206\n",
       "dtype: int64"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df.Carrier.value_counts()\n",
    "new_df.groupby('Carrier').size()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "How do the carriers compare in terms of arrival delay performance?\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Carriers ordered in less arrival delay: \n",
      "\n",
      "         ArrDelayMean   Size\n",
      "Carrier                     \n",
      "HA          -0.382131   1858\n",
      "AS          -0.020036   6688\n",
      "DL           1.712561  38349\n",
      "US           3.909052  23530\n",
      "UA           4.523336  28540\n",
      "9E           4.941701   7959\n",
      "OO           5.983819  16130\n",
      "AA           6.305098  28876\n",
      "FL           7.172723   9356\n",
      "YV           7.654053   5206\n",
      "WN           7.952903  57838\n",
      "VX           9.165007   3515\n",
      "EV           9.736436  15814\n",
      "B6           9.740798  12307\n",
      "F9          10.939239   3522\n",
      "MQ          12.065430  11478\n"
     ]
    }
   ],
   "source": [
    "comp = new_df[['Carrier','ArrDelay']].groupby('Carrier').mean()\n",
    "\n",
    "comp = pd.concat([comp,new_df[['Carrier','ArrDelay']].groupby('Carrier').std(),new_df[['Carrier','ArrDelay']].groupby('Carrier').size()],axis=1)\n",
    "\n",
    "comp.columns = ['ArrDelayMean','ArrDelayStd','Size']\n",
    "\n",
    "\n",
    "\n",
    "print('How do the carriers compare in terms of arrival delay performance?\\n')\n",
    "fig, ax = plt.subplots(1,2,figsize=(20,5))\n",
    "new_df.boxplot(column = 'ArrDelay',by = 'Carrier',ax=ax[0])\n",
    "comp.iloc[:,0:1].plot(ax=ax[1])\n",
    "plt.show()\n",
    "print('Carriers ordered in less arrival delay: \\n')\n",
    "ord_comp = comp.iloc[:,[0,2]].sort_values('ArrDelayMean') \n",
    "print(ord_comp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Is there a noticable difference in arrival delays for different days of the week?\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print('Is there a noticable difference in arrival delays for different days of the week?\\n')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>25%</th>\n",
       "      <th>50%</th>\n",
       "      <th>75%</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>DayOfWeek</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>40911.0</td>\n",
       "      <td>6.421207</td>\n",
       "      <td>34.666348</td>\n",
       "      <td>-45.0</td>\n",
       "      <td>-11.0</td>\n",
       "      <td>-3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>329.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>39859.0</td>\n",
       "      <td>3.958830</td>\n",
       "      <td>32.249806</td>\n",
       "      <td>-45.0</td>\n",
       "      <td>-12.0</td>\n",
       "      <td>-4.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>331.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>40650.0</td>\n",
       "      <td>6.555720</td>\n",
       "      <td>35.669594</td>\n",
       "      <td>-45.0</td>\n",
       "      <td>-11.0</td>\n",
       "      <td>-3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>332.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>40531.0</td>\n",
       "      <td>10.075103</td>\n",
       "      <td>38.337495</td>\n",
       "      <td>-45.0</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>328.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>39865.0</td>\n",
       "      <td>8.090681</td>\n",
       "      <td>35.976502</td>\n",
       "      <td>-45.0</td>\n",
       "      <td>-10.0</td>\n",
       "      <td>-2.0</td>\n",
       "      <td>12.0</td>\n",
       "      <td>324.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>31587.0</td>\n",
       "      <td>1.808940</td>\n",
       "      <td>29.617186</td>\n",
       "      <td>-45.0</td>\n",
       "      <td>-13.0</td>\n",
       "      <td>-5.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>327.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>37563.0</td>\n",
       "      <td>4.760775</td>\n",
       "      <td>33.603886</td>\n",
       "      <td>-45.0</td>\n",
       "      <td>-12.0</td>\n",
       "      <td>-4.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>331.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             count       mean        std   min   25%  50%   75%    max\n",
       "DayOfWeek                                                             \n",
       "1          40911.0   6.421207  34.666348 -45.0 -11.0 -3.0  10.0  329.0\n",
       "2          39859.0   3.958830  32.249806 -45.0 -12.0 -4.0   8.0  331.0\n",
       "3          40650.0   6.555720  35.669594 -45.0 -11.0 -3.0  10.0  332.0\n",
       "4          40531.0  10.075103  38.337495 -45.0 -10.0 -1.0  14.0  328.0\n",
       "5          39865.0   8.090681  35.976502 -45.0 -10.0 -2.0  12.0  324.0\n",
       "6          31587.0   1.808940  29.617186 -45.0 -13.0 -5.0   6.0  327.0\n",
       "7          37563.0   4.760775  33.603886 -45.0 -12.0 -4.0   9.0  331.0"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "new_df.groupby('DayOfWeek')['ArrDelay'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Which departure airport has the highest average departure delay?\n",
      "\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "ArrDelay    11.56986\n",
       "Name: Chicago O'Hare International, dtype: float64"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print('Which departure airport has the highest average departure delay?\\n')\n",
    "groupday = pd.DataFrame(new_df.groupby('OriginAirportName')['ArrDelay'].mean())\n",
    "\n",
    "groupday.loc[groupday['ArrDelay'].idxmax()]\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:xlabel='Carrier'>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('Do **late** departures tend to result in longer arrival delays than on-time departures?\\n')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "print('Which route (from origin airport to destination airport) has the most **late** arrivals?\\n')\n",
    "print('Which route has the highest average arrival delay?\\n')\n",
    "new_df.sortby()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
